[General]
cmdenv-express-mode = true
cmdenv-autoflush = true
image-path = ../../images

##########################################################
#            Output Format Results                       #
##########################################################
repeat = 1
seed-set = ${repetition}
output-scalar-file = ${resultdir}/${iterationvars}/${repetition}.sca
output-vector-file = ${resultdir}/${iterationvars}/${repetition}.vec
**.scalar-recording = true
**.vector-recording = true

##########################################################
#            Simulation parameters                       #
##########################################################
debug-on-errors = false
print-undisposed = false

sim-time-limit = 70s

**.sctp.**.scalar-recording = false
**.sctp.**.vector-recording = false

**.coreDebug = false
**.routingRecorder.enabled = false

#**.displayAddresses = true

*.playgroundSizeX = 1000m
*.playgroundSizeY = 4999m
*.playgroundSizeZ = 50m
##########################################################
#			         channel parameters                  #
##########################################################
**.channelControl.pMax = 10W
**.channelControl.alpha = 1.0
**.channelControl.carrierFrequency = 2100e+6Hz

# PhyLayer & Feedback parameters
**.lteNic.phy.channelModel=xmldoc("config_channel.xml")
**.feedbackComputation = xmldoc("config_channel.xml")

##########################################################
#              LTE specific parameters                   #
##########################################################
# AMC module parameters 
**.rbAllocationType = "localized"
**.feedbackType = "ALLBANDS"
**.feedbackGeneratorType = "IDEAL"
**.maxHarqRtx = 3
#**.numUe = ${numUEs=10}

# RUs
**.cellInfo.ruRange = 50
**.cellInfo.ruTxPower = "50,50,50;"
**.cellInfo.antennaCws = "2;" # !!MACRO + RUS (numRus + 1)
**.cellInfo.numRbDl = 25
**.cellInfo.numRbUl = 25
**.numBands = 25
**.fbDelay = 1

# Enable handover
*.car[*].lteNic.phy.enableHandover = true
*.eNodeB*.lteNic.phy.enableHandover = true
*.eNodeB*.lteNic.phy.broadcastMessageInterval = 0.5s

#Disable HARQ INTERRUPT
**.msHarqInterrupt = false

##########################################################
#                      Mobility                          #			
##########################################################		
**.mobility.constraintAreaMinZ = 0m
**.mobility.constraintAreaMaxZ = 0m

*.car[*].mobility.initFromDisplayString = false
*.car[*].mobilityType = "LinearMobility"
*.car[*].mobility.updateInterval = 0.05s

**.numClusters = 1
**.numRoads = 1
**.numCars = 5
**.car[0].mobility.initialX = 150m
**.car[0].mobility.initialY = 10m
**.car[0].mobility.angle = 90deg
**.car[0].mobility.speed = 20mps
**.car[0].mobility.acceleration = 0

**.car[1].mobility.initialX = 150m
**.car[1].mobility.initialY = 100m
**.car[1].mobility.angle = 90deg
**.car[1].mobility.speed = 10mps
**.car[1].mobility.acceleration = 0

**.car[2].mobility.initialX = 150m
**.car[2].mobility.initialY = 150m
**.car[2].mobility.angle = 90deg
**.car[2].mobility.speed = 5mps
**.car[2].mobility.acceleration = 0

**.car[3].mobility.initialX = 150m
**.car[3].mobility.initialY = 400m
**.car[3].mobility.angle = 90deg
**.car[3].mobility.speed = 10mps
**.car[3].mobility.acceleration = 0

**.car[4].mobility.initialX = 150m
**.car[4].mobility.initialY = 800m
**.car[4].mobility.angle = 90deg
**.car[4].mobility.speed = 15mps
**.car[4].mobility.acceleration = 0

**.car[*].mobility.maxSpeed = ${maxSpeed=28mps}
##########################################################
#                    App Layer                           #
##########################################################
#
#########################_Car Side_#######################
#
# Enable D2D for the eNodeB and the UEs
#*.eNodeB*.nicType = "LteNicEnbD2D"
#*.car[*].nicType = "LteNicUeD2D"
#**.amcMode = "D2D"
#**.usePreconfiguredTxParams = true
#**.d2dCqi = ${cqi=7}
#
*.eNodeB*.nicType = "LteNicEnb"
*.car[*].nicType = "LteNicUe"
**.amcMode = "AUTO"
#----------------------------------------
*.car[*].numUdpApps = 1
#----------------------------------------
#
#	UEClusterize App:
*.car[*].udpApp[0].typename = "UEClusterizeApp"
*.car[*].udpApp[0].startTime = 0s										#when sending start clsuterize
*.car[*].udpApp[0].period = ${uePeriod=0.01s}										#after when retry sending start clusterize || sending info clusterize
*.car[*].udpApp[0].stopTime = 500s										#when sending stop clusterize (after receiving the ack on the start!)
*.car[*].udpApp[0].meHostAddress = "meHost.virtualisationInfrastructure"
#--------------------------------------------------------------
#
######################_ME Host Side_#####################
#
#	resources available
*.meHost.maxMEApps = 5												#max ME Apps to instantiate
*.meHost.maxRam = 32GB													#max KBytes of Ram Space 
*.meHost.maxDisk = 100TB												#max KBytes of Ram Space 
*.meHost.maxCpu = 1														#max percentage of CPU
#----------------------------------------
#
#	MEServices available
*.meHost.mePlatform.numServices = 1
#
#-------MEClusterizeService:-------------
# 
*.meHost.mePlatform.udpService[0].typename = "MEPlatooningService"
*.meHost.mePlatform.udpService[0].startTime = 0s
*.meHost.mePlatform.udpService[0].period = ${mecPeriod=1s,0.5s,0.1s,0.05s,0.01s}	
*.meHost.mePlatform.udpService[0].preconfiguredTxMode = "DOWNLINK_UNICAST"		
#*.meHost.mePlatform.udpService[0].preconfiguredTxMode = ${txm="DOWNLINK_UNICAST","V2V_MULTICAST","V2V_UNICAST"}		#"V2V_UNICAST","V2V_MULTICAST","DOWNLINK_UNICAST","HYBRID"
#constraint= ($txm=="V2V_UNICAST" || $txm=="V2V_MULTICAST" || ($cqi==7 && $txm=="DOWNLINK_UNICAST"))
															#
#
*.meHost.mePlatform.udpService[0].shape = "rectangle"							#shape supported "rectangle" and triangle
*.meHost.mePlatform.udpService[0].directionDelimiterThreshold = 0.09817rad		#0.09817 = PI/32
*.meHost.mePlatform.udpService[0].proximityThreshold = 500m						#rectangle/triangle side
*.meHost.mePlatform.udpService[0].roadLaneSize = 2.75m							#rectangle base
*.meHost.mePlatform.udpService[0].triangleAngle = 0.18rad						#triangle angle
#
*.meHost.mePlatform.udpService[0].desiredVelocity = ${dSpeed=20mps}								

*.meHost.mePlatform.udpService[0].criticalDistance = 0.05m																	
*.meHost.mePlatform.udpService[0].minAcceleration = ${minAcc=-5}															
*.meHost.mePlatform.udpService[0].maxAcceleration = ${maxAcc=1.5}									
#
constraint= ($minAcc==-5 && $maxAcc==1.5 && $dSpeed==20mps && $maxSpeed=28mps)
#constraint= ($minAcc==-8 && $maxAcc==3 && $dSpeed==28mps && $maxSpeed=38mps)
#----------------------------------------
#	ME Host connected
**.eNodeB*.meHost = "meHost"
#----------------------------------------

# Config "Test"
#
# ----------------------------------------------------------------------------- #

[Config Highway_1Cell]
network = lte.simulations.MEC.InetMobility.MecInetSingleCell
result-dir = Highway_1Cell

# X2 and SCTP configuration
*.eNodeB*.x2App[*].server.localPort = 6000 + ancestorIndex(1) # Server ports (x2App[0]=5000, x2App[1]=5001, ...)

*.eNodeB1.numX2Apps = 0    # one x2App 
#*.eNodeB1.x2App[0].client.connectAddress = "eNodeB2%x2ppp0" 
**.sctp.nagleEnabled = false         # if true, transmission of small packets will be delayed on the X2
**.sctp.enableHeartbeats = false

**.car[*].masterId = 1     # useless if dynamic association is disabled
**.car[*].macCellId = 1    # useless if dynamic association is disabled




[Config Highway_3Cells]
network = lte.simulations.MEC.InetMobility.MecInetThreeCell
result-dir = Highway_3Cells

# X2 and SCTP configuration
*.eNodeB*.x2App[*].server.localPort = 6000 + ancestorIndex(1) # Server ports (x2App[0]=5000, x2App[1]=5001, ...)

*.eNodeB1.numX2Apps = 1    # one x2App 
*.eNodeB1.x2App[0].client.connectAddress = "eNodeB2%x2ppp0" 
*.eNodeB2.numX2Apps = 2    # two x2App 
*.eNodeB2.x2App[0].client.connectAddress = "eNodeB1%x2ppp0" 
*.eNodeB2.x2App[1].client.connectAddress = "eNodeB3%x2ppp0" 
*.eNodeB3.numX2Apps = 1    # one x2App 
*.eNodeB3.x2App[0].client.connectAddress = "eNodeB2%x2ppp0" 
**.sctp.nagleEnabled = false         # if true, transmission of small packets will be delayed on the X2
**.sctp.enableHeartbeats = false

#**.car[*].masterId = 1     # useless if dynamic association is disabled
#**.car[*].macCellId = 1    # useless if dynamic association is disabled
								
# ----------------------------------------------------------------------------- #

# ----------------------------------------------------------------------------- #
#[Config Highway_9Cells]																				# eNodeBs at 300m of distances!
#network = lte.simulations.MEC.InetMobility.MecInetNineCell
#
#result-dir = Highway_9Cells
#sim-time-limit = 250s
#
## Enable dynamic association of UEs (based on best SINR)
#*.car[*].lteNic.phy.dynamicCellAssociation = true
#
#**.car[*].masterId = 1     # useless if dynamic association is disabled
#**.car[*].macCellId = 1    # useless if dynamic association is disabled
#**.eNodeB1.macCellId = 1
#**.eNodeB1.macNodeId = 1
#**.eNodeB2.macCellId = 2
#**.eNodeB2.macNodeId = 2
#**.eNodeB3.macCellId = 3
#**.eNodeB3.macNodeId = 3
#**.eNodeB4.macCellId = 4
#**.eNodeB4.macNodeId = 4
#**.eNodeB5.macCellId = 5
#**.eNodeB5.macNodeId = 5
#**.eNodeB6.macCellId = 6
#**.eNodeB6.macNodeId = 6
#**.eNodeB7.macCellId = 7
#**.eNodeB7.macNodeId = 7
#**.eNodeB8.macCellId = 8
#**.eNodeB8.macNodeId = 8
#**.eNodeB9.macCellId = 9
#**.eNodeB9.macNodeId = 9
#**.eNodeBCount = 9
#
## eNodeBPositions
#*.eNodeB[*].mobility.initFromDisplayString = true
#
## X2 and SCTP configuration
#*.eNodeB*.x2App[*].server.localPort = 6000 + ancestorIndex(1) # Server ports (x2App[0]=5000, x2App[1]=5001, ...)
#
#*.eNodeB1.numX2Apps = 1    # one x2App 
#*.eNodeB1.x2App[0].client.connectAddress = "eNodeB2%x2ppp0" 
#
#*.eNodeB2.numX2Apps = 2    # two x2App 
#*.eNodeB2.x2App[0].client.connectAddress = "eNodeB1%x2ppp0" 
#*.eNodeB2.x2App[1].client.connectAddress = "eNodeB3%x2ppp0" 
#
#*.eNodeB3.numX2Apps = 2    # two x2App 
#*.eNodeB3.x2App[0].client.connectAddress = "eNodeB2%x2ppp0" 
#*.eNodeB3.x2App[1].client.connectAddress = "eNodeB4%x2ppp0" 
#
#*.eNodeB4.numX2Apps = 2    # two x2App 
#*.eNodeB4.x2App[0].client.connectAddress = "eNodeB3%x2ppp0" 
#*.eNodeB4.x2App[1].client.connectAddress = "eNodeB5%x2ppp0" 
#
#*.eNodeB5.numX2Apps = 2    # two x2App 
#*.eNodeB5.x2App[0].client.connectAddress = "eNodeB4%x2ppp0" 
#*.eNodeB5.x2App[1].client.connectAddress = "eNodeB6%x2ppp0" 
#
#*.eNodeB6.numX2Apps = 2    # two x2App 
#*.eNodeB6.x2App[0].client.connectAddress = "eNodeB5%x2ppp0" 
#*.eNodeB6.x2App[1].client.connectAddress = "eNodeB7%x2ppp0" 
#
#*.eNodeB7.numX2Apps = 2    # two x2App 
#*.eNodeB7.x2App[0].client.connectAddress = "eNodeB6%x2ppp0" 
#*.eNodeB7.x2App[1].client.connectAddress = "eNodeB8%x2ppp0" 
#
#*.eNodeB8.numX2Apps = 2    # two x2App 
#*.eNodeB8.x2App[0].client.connectAddress = "eNodeB7%x2ppp0" 
#*.eNodeB8.x2App[1].client.connectAddress = "eNodeB9%x2ppp0" 
#
#*.eNodeB9.numX2Apps = 1    # one x2App 
#*.eNodeB9.x2App[0].client.connectAddress = "eNodeB8%x2ppp0" 
#
#**.sctp.nagleEnabled = false         # if true, transmission of small packets will be delayed on the X2
#**.sctp.enableHeartbeats = false	
#
#
## ----------------------------------------------------------------------------- #
#[Config Highway_20Cells]																			# eNodeBs at 250m of distances!
#network = lte.simulations.MEC.InetMobility.MecInetTwentyCell
#
#result-dir = HW_20Cells
#sim-time-limit = 180s
#
## Enable dynamic association of UEs (based on best SINR)
#*.car[*].lteNic.phy.dynamicCellAssociation = true
#
#**.car[*].masterId = 1     # useless if dynamic association is disabled
#**.car[*].macCellId = 1    # useless if dynamic association is disabled
#**.eNodeB1.macCellId = 1
#**.eNodeB1.macNodeId = 1
#**.eNodeB2.macCellId = 2
#**.eNodeB2.macNodeId = 2
#**.eNodeB3.macCellId = 3
#**.eNodeB3.macNodeId = 3
#**.eNodeB4.macCellId = 4
#**.eNodeB4.macNodeId = 4
#**.eNodeB5.macCellId = 5
#**.eNodeB5.macNodeId = 5
#**.eNodeB6.macCellId = 6
#**.eNodeB6.macNodeId = 6
#**.eNodeB7.macCellId = 7
#**.eNodeB7.macNodeId = 7
#**.eNodeB8.macCellId = 8
#**.eNodeB8.macNodeId = 8
#**.eNodeB9.macCellId = 9
#**.eNodeB9.macNodeId = 9
#**.eNodeB10.macCellId = 10
#**.eNodeB10.macNodeId = 10
#**.eNodeB11.macCellId = 11
#**.eNodeB11.macNodeId = 11
#**.eNodeB12.macCellId = 12
#**.eNodeB12.macNodeId = 12
#**.eNodeB13.macCellId = 13
#**.eNodeB13.macNodeId = 13
#**.eNodeB14.macCellId = 14
#**.eNodeB14.macNodeId = 14
#**.eNodeB15.macCellId = 15
#**.eNodeB15.macNodeId = 15
#**.eNodeB16.macCellId = 16
#**.eNodeB16.macNodeId = 16
#**.eNodeB17.macCellId = 17
#**.eNodeB17.macNodeId = 17
#**.eNodeB18.macCellId = 18
#**.eNodeB18.macNodeId = 18
#**.eNodeB19.macCellId = 19
#**.eNodeB19.macNodeId = 19
#**.eNodeB20.macCellId = 20
#**.eNodeB20.macNodeId = 20
#**.eNodeBCount = 20
#
## eNodeBPositions
#*.eNodeB[*].mobility.initFromDisplayString = true
#
## X2 and SCTP configuration
#*.eNodeB*.x2App[*].server.localPort = 8000 + ancestorIndex(1) # Server ports (x2App[0]=8000, x2App[1]=8001, ...)
#
#*.eNodeB1.numX2Apps = 1    # one x2App 
#*.eNodeB1.x2App[0].client.connectAddress = "eNodeB2%x2ppp0" 
#
#*.eNodeB2.numX2Apps = 2    # two x2App 
#*.eNodeB2.x2App[0].client.connectAddress = "eNodeB1%x2ppp0" 
#*.eNodeB2.x2App[1].client.connectAddress = "eNodeB3%x2ppp0" 
#
#*.eNodeB3.numX2Apps = 2    # two x2App 
#*.eNodeB3.x2App[0].client.connectAddress = "eNodeB2%x2ppp0" 
#*.eNodeB3.x2App[1].client.connectAddress = "eNodeB4%x2ppp0" 
#
#*.eNodeB4.numX2Apps = 2    # two x2App 
#*.eNodeB4.x2App[0].client.connectAddress = "eNodeB3%x2ppp0" 
#*.eNodeB4.x2App[1].client.connectAddress = "eNodeB5%x2ppp0" 
#
#*.eNodeB5.numX2Apps = 2    # two x2App 
#*.eNodeB5.x2App[0].client.connectAddress = "eNodeB4%x2ppp0" 
#*.eNodeB5.x2App[1].client.connectAddress = "eNodeB6%x2ppp0" 
#
#*.eNodeB6.numX2Apps = 2    # two x2App 
#*.eNodeB6.x2App[0].client.connectAddress = "eNodeB5%x2ppp0" 
#*.eNodeB6.x2App[1].client.connectAddress = "eNodeB7%x2ppp0" 
#
#*.eNodeB7.numX2Apps = 2    # two x2App 
#*.eNodeB7.x2App[0].client.connectAddress = "eNodeB6%x2ppp0" 
#*.eNodeB7.x2App[1].client.connectAddress = "eNodeB8%x2ppp0" 
#
#*.eNodeB8.numX2Apps = 2    # two x2App 
#*.eNodeB8.x2App[0].client.connectAddress = "eNodeB7%x2ppp0" 
#*.eNodeB8.x2App[1].client.connectAddress = "eNodeB9%x2ppp0" 
#
#*.eNodeB9.numX2Apps = 2    # two x2App 
#*.eNodeB9.x2App[0].client.connectAddress = "eNodeB8%x2ppp0" 
#*.eNodeB9.x2App[1].client.connectAddress = "eNodeB10%x2ppp0" 
#
#*.eNodeB10.numX2Apps = 2    # two x2App 
#*.eNodeB10.x2App[0].client.connectAddress = "eNodeB9%x2ppp0" 
#*.eNodeB10.x2App[1].client.connectAddress = "eNodeB11%x2ppp0" 
#
#*.eNodeB11.numX2Apps = 2    # two x2App 
#*.eNodeB11.x2App[0].client.connectAddress = "eNodeB10%x2ppp0" 
#*.eNodeB11.x2App[1].client.connectAddress = "eNodeB12%x2ppp0" 
#
#*.eNodeB12.numX2Apps = 2    # two x2App 
#*.eNodeB12.x2App[0].client.connectAddress = "eNodeB11%x2ppp0" 
#*.eNodeB12.x2App[1].client.connectAddress = "eNodeB13%x2ppp0" 
#
#*.eNodeB13.numX2Apps = 2    # two x2App 
#*.eNodeB13.x2App[0].client.connectAddress = "eNodeB12%x2ppp0" 
#*.eNodeB13.x2App[1].client.connectAddress = "eNodeB14%x2ppp0" 
#
#*.eNodeB14.numX2Apps = 2    # two x2App 
#*.eNodeB14.x2App[0].client.connectAddress = "eNodeB13%x2ppp0" 
#*.eNodeB14.x2App[1].client.connectAddress = "eNodeB15%x2ppp0" 
#
#*.eNodeB15.numX2Apps = 2    # two x2App 
#*.eNodeB15.x2App[0].client.connectAddress = "eNodeB14%x2ppp0" 
#*.eNodeB15.x2App[1].client.connectAddress = "eNodeB16%x2ppp0" 
#
#*.eNodeB16.numX2Apps = 2    # two x2App 
#*.eNodeB16.x2App[0].client.connectAddress = "eNodeB15%x2ppp0" 
#*.eNodeB16.x2App[1].client.connectAddress = "eNodeB17%x2ppp0" 
#
#*.eNodeB17.numX2Apps = 2    # two x2App 
#*.eNodeB17.x2App[0].client.connectAddress = "eNodeB16%x2ppp0" 
#*.eNodeB17.x2App[1].client.connectAddress = "eNodeB18%x2ppp0" 
#
#*.eNodeB18.numX2Apps = 2    # two x2App 
#*.eNodeB18.x2App[0].client.connectAddress = "eNodeB17%x2ppp0" 
#*.eNodeB18.x2App[1].client.connectAddress = "eNodeB19%x2ppp0" 
#
#*.eNodeB19.numX2Apps = 2    # two x2App 
#*.eNodeB19.x2App[0].client.connectAddress = "eNodeB18%x2ppp0" 
#*.eNodeB19.x2App[1].client.connectAddress = "eNodeB20%x2ppp0" 
#
#*.eNodeB20.numX2Apps = 1    # one x2App 
#*.eNodeB20.x2App[0].client.connectAddress = "eNodeB19%x2ppp0" 
#
#**.sctp.nagleEnabled = false         # if true, transmission of small packets will be delayed on the X2
#**.sctp.enableHeartbeats = false	
