[General]
scheduler-class = "inet::cSocketRTScheduler"
cmdenv-express-mode = true
cmdenv-autoflush = true
image-path = ../../images

##########################################################
#            Output Format Results                       #
##########################################################

repeat = 1
seed-set = ${repetition}
output-scalar-file = ${resultdir}/${iterationvars}/${repetition}.sca
output-vector-file = ${resultdir}/${iterationvars}/${repetition}.vec
**.scalar-recording = true
**.vector-recording = false

result-dir = 3ue

##########################################################
#            Simulation parameters                       #
##########################################################
debug-on-errors = false
print-undisposed = false

sim-time-limit = 30s

**.sctp.**.scalar-recording = false
**.sctp.**.vector-recording = false

**.coreDebug = false
**.routingRecorder.enabled = false

#**.displayAddresses = true

*.playgroundSizeX = 1100m
*.playgroundSizeY = 800m
*.playgroundSizeZ = 50m

##########################################################
#			         channel parameters                  #
##########################################################
**.channelControl.pMax = 10W
**.channelControl.alpha = 1.0
**.channelControl.carrierFrequency = 2100e+6Hz

##########################################################
#              LTE specific parameters                   #
##########################################################

# Enable dynamic association of UEs (based on best SINR)
*.ue[*].lteNic.phy.dynamicCellAssociation = true

**.ue[*].masterId = 1     # useless if dynamic association is disabled
**.ue[*].macCellId = 1    # useless if dynamic association is disabled
**.eNodeB1.macCellId = 1
**.eNodeB1.macNodeId = 1

# AMC module parameters 
**.rbAllocationType = "localized"
**.feedbackType = "ALLBANDS"
**.feedbackGeneratorType = "IDEAL"
**.maxHarqRtx = 3
#**.numUe = ${numUEs=10}

# RUs
**.cellInfo.ruRange = 50
**.cellInfo.ruTxPower = "50,50,50;"
**.cellInfo.antennaCws = "2;" # !!MACRO + RUS (numRus + 1)
**.cellInfo.numRbDl = 25
**.cellInfo.numRbUl = 25
**.numBands = 25

# Enable handover
*.ue[*].lteNic.phy.enableHandover = true
*.eNodeB*.lteNic.phy.enableHandover = true

##########################################################
#                      Mobility                          #			
##########################################################		
#**.mobility.constraintAreaMinZ = 0m
#**.mobility.constraintAreaMaxZ = 0m
#
#*.ue[*].mobility.initFromDisplayString = false
#*.ue[*].mobilityType = "LinearMobility"
#*.ue[*].mobility.updateInterval = 0.05s
#
#*.eNodeB1.mobility.initFromDisplayString = true
#
#**.numUes = 3
#**.ue[0].mobility.initialX = 180m
#**.ue[0].mobility.initialY = 50m
#**.ue[0].mobility.angle = 90deg
#**.ue[0].mobility.speed = 10mps
#**.ue[0].mobility.acceleration = 0
#
#**.ue[1].mobility.initialX = 180m
#**.ue[1].mobility.initialY = 100m
#**.ue[1].mobility.angle = 90deg
#**.ue[1].mobility.speed = 10mps
#**.ue[1].mobility.acceleration = 0
#
#**.ue[2].mobility.initialX = 180m
#**.ue[2].mobility.initialY = 150m
#**.ue[2].mobility.angle = 90deg
#**.ue[2].mobility.speed = 10mps
#**.ue[2].mobility.acceleration = 0

##########################################################
#                    App Layer                           #
##########################################################
#
#
*.ue[*].numUdpApps = 1
#
#------------UEWarningAlertApp---------------
*.ue[*].udpApp[0].typename = "UEWarningAlertApp"
*.ue[*].udpApp[0].startTime = 0s										#when sending start warning alert app
*.ue[*].udpApp[0].period = 0.1s										#period to sending messages
*.ue[*].udpApp[0].stopTime = 25s										#when sending stop MEC warning alert app
*.ue[*].udpApp[0].destAddress = "192.168.1.175"
*.ue[*].udpApp[0].destPort = 10021

*.ue[*].udpApp[0].requiredRam = 10MB
*.ue[*].udpApp[0].requiredDisk = 10MB
*.ue[*].udpApp[0].requiredCpu = 0.01
#----------------------------------------
#
######################_ME Host Side_#####################
#
#	resources available
*.meHost.maxMEApps = 100												#max ME Apps to instantiate
*.meHost.maxRam = 32GB													#max KBytes of Ram Space 
*.meHost.maxDisk = 100TB												#max KBytes of Ram Space 
*.meHost.maxCpu = 1														#max percentage of CPU
#----------------------------------------
#
#	MEServices available
*.meHost.mePlatform.numServices = 1
#
#-------MEWarningAlertService:---------------
*.meHost.mePlatform.udpService[0].typename = "MEWarningAlertService"
# to correctly display the Danger area insert Edges in the order they are crossed by lines
# edge A
*.meHost.mePlatform.udpService[0].dangerEdgeAx = 160m
*.meHost.mePlatform.udpService[0].dangerEdgeAy = 180m
*.meHost.mePlatform.udpService[0].dangerEdgeAz = 0m
# edge B
*.meHost.mePlatform.udpService[0].dangerEdgeBx = 240m
*.meHost.mePlatform.udpService[0].dangerEdgeBy = 200m
*.meHost.mePlatform.udpService[0].dangerEdgeBz = 0m
# edge C
*.meHost.mePlatform.udpService[0].dangerEdgeCx = 210m
*.meHost.mePlatform.udpService[0].dangerEdgeCy = 320m
*.meHost.mePlatform.udpService[0].dangerEdgeCz = 0m
# edge D
*.meHost.mePlatform.udpService[0].dangerEdgeDx = 150m
*.meHost.mePlatform.udpService[0].dangerEdgeDy = 350m
*.meHost.mePlatform.udpService[0].dangerEdgeDz = 0m
#----------------------------------------
#
#	ME Host connected
**.eNodeB*.meHost = "meHost"
# ----------------------------------------------------------------------------- #
# Config "Test"
#
[Config SingleCell]
network = lte.simulations.test_mec.MecSingleCell
#